/*
 * Irisnet API
 * Artificial Intelligence (AI) for image- and video-processing in realtime.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.irisnet.java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Describes the current balance of the given license key. A key has a certain amount of credits that can be used for any kind of AI recognition. The license key is invalid, when all of the credits have been used.
 */
@ApiModel(description = "Describes the current balance of the given license key. A key has a certain amount of credits that can be used for any kind of AI recognition. The license key is invalid, when all of the credits have been used.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-09-22T13:03:14.380+02:00[Europe/Berlin]")
public class LicenseInfo {
  public static final String SERIALIZED_NAME_CREDITS_USED = "creditsUsed";
  @SerializedName(SERIALIZED_NAME_CREDITS_USED)
  private Integer creditsUsed;

  public static final String SERIALIZED_NAME_CREDITS_REMAINING = "creditsRemaining";
  @SerializedName(SERIALIZED_NAME_CREDITS_REMAINING)
  private Integer creditsRemaining;

  public static final String SERIALIZED_NAME_TOTAL_CREDITS = "totalCredits";
  @SerializedName(SERIALIZED_NAME_TOTAL_CREDITS)
  private Integer totalCredits;


  public LicenseInfo creditsUsed(Integer creditsUsed) {
    
    this.creditsUsed = creditsUsed;
    return this;
  }

   /**
   * Credits used for the license key.
   * @return creditsUsed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "14", value = "Credits used for the license key.")

  public Integer getCreditsUsed() {
    return creditsUsed;
  }


  public void setCreditsUsed(Integer creditsUsed) {
    this.creditsUsed = creditsUsed;
  }


  public LicenseInfo creditsRemaining(Integer creditsRemaining) {
    
    this.creditsRemaining = creditsRemaining;
    return this;
  }

   /**
   * Credits remaining for the license key.
   * @return creditsRemaining
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "86", value = "Credits remaining for the license key.")

  public Integer getCreditsRemaining() {
    return creditsRemaining;
  }


  public void setCreditsRemaining(Integer creditsRemaining) {
    this.creditsRemaining = creditsRemaining;
  }


  public LicenseInfo totalCredits(Integer totalCredits) {
    
    this.totalCredits = totalCredits;
    return this;
  }

   /**
   * Total credits contained within the license.
   * @return totalCredits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100", value = "Total credits contained within the license.")

  public Integer getTotalCredits() {
    return totalCredits;
  }


  public void setTotalCredits(Integer totalCredits) {
    this.totalCredits = totalCredits;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LicenseInfo licenseInfo = (LicenseInfo) o;
    return Objects.equals(this.creditsUsed, licenseInfo.creditsUsed) &&
        Objects.equals(this.creditsRemaining, licenseInfo.creditsRemaining) &&
        Objects.equals(this.totalCredits, licenseInfo.totalCredits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creditsUsed, creditsRemaining, totalCredits);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LicenseInfo {\n");
    sb.append("    creditsUsed: ").append(toIndentedString(creditsUsed)).append("\n");
    sb.append("    creditsRemaining: ").append(toIndentedString(creditsRemaining)).append("\n");
    sb.append("    totalCredits: ").append(toIndentedString(totalCredits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

